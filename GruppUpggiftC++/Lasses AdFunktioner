string ChangeNameFunction()
{
	cout << "-> ";
	string name;
	cin.ignore();
	getline(cin, name);
	return name;
}
//________________________________________________

AdType ChangeAdTypeFunction()
{
	AdType adType = AdType_plain;
	cout << "-> ";
	int adTypeInput;
	cin >> adTypeInput;
	if (adTypeInput == 0)
		adType = AdType::AdType_scroll;
	else if (adTypeInput == 1)
		adType = AdType::AdType_blink;
	else if (adTypeInput == 2)
		adType = AdType::AdType_plain;
	return adType;
}
//_________________________________________________

int ChangeIdFunction()
{
	cout << "-> ";
	int id;
	cin >> id;
	cin.ignore();
	return id;
}
//___________________________________________________

vector<Ad> CreateNewAd(Campaign& campaign)
{

	string name, adText;
	int id;
	AdType adType = AdType::AdType_plain;

	cout << "Enter name of your Ad "; // GÅR INTE ATT GÖRA MELLANSLAG
	name = ChangeNameFunction();

	cout << "Enter ID number ";
	id = ChangeIdFunction();

	cout << "Enter Your adtype \n0. for Scroll \n1. for Blinking \n2. For Plain \n";
	ChangeAdTypeFunction();

	cout << "Enter text for your ad to be displayed ";
	adText = ChangeNameFunction();

	Ad newAd(name, id, adText, adType); // BEHÖVS PEKARE HÄR???? fråga steffe

	vector<Ad> lista = campaign.GetAllAdsForCampaign();
	lista.push_back(newAd);

	return lista;
}
//________________________________________________________

string ShowAdType(AdType adType) 
{
	string text;
	if (adType == 0)
		text = "Scrolling Text";
	else if (adType == 1)
		text = "Blinking Text";
	else if (adType == 2)
		text = "Plain Text";
	return text;
}
//______________________________________________________

void PrintAds(vector<Ad>ListOfAds) 
{
	for (auto x : ListOfAds) 
	{
		cout << "Name -> " << x.GetName() << endl;
		cout << "Id -> " << x.GetAdID() << endl;
		cout << "AdType -> " << ShowAdType(x.GetAdType()) << endl; // nice!!! x.
		cout << "AdText -> " << x.GetAdText() << endl;
		cout << endl;
	}
}
//______________________________________________________

vector<Ad> ChangeCampaignAd(vector<Ad>ListOfAds)
{
	int i;
	int adIDinput;
	cout << "Enter Ad ID to change -> ";
	cin >> adIDinput;
	for (i = 0; i < ListOfAds.size(); i++)
	{
		if (adIDinput == ListOfAds[i].GetAdID())
		{
			break;
		}
	}

	for (auto x : ListOfAds)
	{
		if (adIDinput == x.GetAdID())
		{
			cout << "Enter you new Ad Name ";
			x.ChangeAdName(ChangeNameFunction());
			cout << "Enter your new Ad ID ";
			x.ChangeAdID(ChangeIdFunction());
			cout << "Enter Your new adtype \n0. for Scroll \n1. for Blinking \n2. For Plain \n";
			x.ChangeAdType(ChangeAdTypeFunction());
			cout << "Enter your new Ad Text ";
			x.ChangeAdText(ChangeNameFunction());
			ListOfAds.at(i) = x;
		}
	}
	return ListOfAds;
}
//______________________________________________________

vector<Ad> AdMenu(Campaign& campaign)
{
	while (true)
	{
		int selection;
		cout << "1: Create new Ad" << endl;
		cout << "2: Update Ad" << endl;
		cout << "3: Show campaign Ads" << endl;
		cout << "4: Exit" << endl;

		cin >> selection;
		switch (selection)
		{
		case 1:
			campaign.UpdateAdsList(CreateNewAd(campaign)); // You must go back to updae campaign
			break;
		case 2:
			campaign.UpdateAdsList(ChangeCampaignAd(campaign.GetAllAdsForCampaign()));
			break;
		case 3:
			PrintAds(campaign.GetAllAdsForCampaign());
			break;
		case 4:
			cout << "Exiting...\n";
			return campaign.GetAllAdsForCampaign();
		}
	}
	return campaign.GetAllAdsForCampaign();
}

